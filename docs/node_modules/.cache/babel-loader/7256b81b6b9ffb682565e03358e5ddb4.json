{"ast":null,"code":"var _jsxFileName = \"/Users/breeland/Documents/GitHub/search/src/components/JobInformation.js\";\nimport React from \"react\";\nimport { Button, Spinner } from \"react-bootstrap\";\nvar styleNoJobRender = {\n  textAlign: \"center\",\n  marginTop: \"25%\"\n};\nvar styleJobRender = {\n  textAlign: \"center\"\n};\nvar styleDescriptionRender = {\n  textAlign: \"left\",\n  whiteSpace: \"pre-wrap\"\n};\n\nvar JobInformation = function JobInformation(props) {\n  if (props.loading === true) {\n    return React.createElement(\"div\", {\n      style: styleNoJobRender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Searching for Jobs. It shouldn't take long\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), React.createElement(Spinner, {\n      animation: \"border\",\n      variant: \"success\",\n      style: {\n        width: \"25vh\",\n        height: \"25vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }));\n  }\n\n  if (props.job === null) {\n    return React.createElement(\"div\", {\n      style: styleNoJobRender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Please Click on a Job\");\n  } else {\n    return React.createElement(\"div\", {\n      style: styleJobRender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), props.job.jobTitle, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), props.job.company, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), props.job.jobType, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), \"% Resume Match: \" + Math.random() * 101, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"primary\",\n      href: props.job.link,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Apply through \" + props.job.source), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: styleDescriptionRender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, props.job.jobDescription), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n};\n\nexport default JobInformation;","map":{"version":3,"sources":["/Users/breeland/Documents/GitHub/search/src/components/JobInformation.js"],"names":["React","Button","Spinner","styleNoJobRender","textAlign","marginTop","styleJobRender","styleDescriptionRender","whiteSpace","JobInformation","props","loading","width","height","job","jobTitle","company","jobType","Math","random","link","source","jobDescription"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,iBAAhC;AAEA,IAAMC,gBAAgB,GAAG;AACvBC,EAAAA,SAAS,EAAE,QADY;AAEvBC,EAAAA,SAAS,EAAE;AAFY,CAAzB;AAIA,IAAMC,cAAc,GAAG;AAAEF,EAAAA,SAAS,EAAE;AAAb,CAAvB;AACA,IAAMG,sBAAsB,GAAG;AAAEH,EAAAA,SAAS,EAAE,MAAb;AAAqBI,EAAAA,UAAU,EAAE;AAAjC,CAA/B;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAC9B,MAAIA,KAAK,CAACC,OAAN,KAAkB,IAAtB,EAA4B;AAC1B,WACE;AAAK,MAAA,KAAK,EAAER,gBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,4CADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,OAAD;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,OAAO,EAAC,SAFV;AAGE,MAAA,KAAK,EAAE;AAAES,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAYD;;AACD,MAAIH,KAAK,CAACI,GAAN,KAAc,IAAlB,EAAwB;AACtB,WAAO;AAAK,MAAA,KAAK,EAAEX,gBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+B,uBAA/B,CAAP;AACD,GAFD,MAEO;AACL,WACE;AAAK,MAAA,KAAK,EAAEG,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGGI,KAAK,CAACI,GAAN,CAAUC,QAHb,OAGuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHvB,EAIGL,KAAK,CAACI,GAAN,CAAUE,OAJb,OAIsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJtB,EAKGN,KAAK,CAACI,GAAN,CAAUG,OALb,OAKsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALtB,EAMG,qBAAqBC,IAAI,CAACC,MAAL,KAAgB,GANxC,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAET,KAAK,CAACI,GAAN,CAAUM,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,mBAAmBV,KAAK,CAACI,GAAN,CAAUO,MADhC,CATF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,EAcE;AAAK,MAAA,KAAK,EAAEd,sBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGG,KAAK,CAACI,GAAN,CAAUQ,cADb,CAdF,EAgBS,GAhBT,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,CADF;AAqBD;AACF,CAxCD;;AA0CA,eAAeb,cAAf","sourcesContent":["import React from \"react\";\nimport { Button, Spinner } from \"react-bootstrap\";\n\nconst styleNoJobRender = {\n  textAlign: \"center\",\n  marginTop: \"25%\"\n};\nconst styleJobRender = { textAlign: \"center\" };\nconst styleDescriptionRender = { textAlign: \"left\", whiteSpace: \"pre-wrap\" };\n\nconst JobInformation = props => {\n  if (props.loading === true) {\n    return (\n      <div style={styleNoJobRender}>\n        {\"Searching for Jobs. It shouldn't take long\"}\n        <br />\n        <br />\n        <Spinner\n          animation=\"border\"\n          variant=\"success\"\n          style={{ width: \"25vh\", height: \"25vh\" }}\n        />\n      </div>\n    );\n  }\n  if (props.job === null) {\n    return <div style={styleNoJobRender}>{\"Please Click on a Job\"}</div>;\n  } else {\n    return (\n      <div style={styleJobRender}>\n        <br />\n        <br />\n        {props.job.jobTitle} <br />\n        {props.job.company} <br />\n        {props.job.jobType} <br />\n        {\"% Resume Match: \" + Math.random() * 101}\n        <br />\n        <br />\n        <Button variant=\"primary\" href={props.job.link}>\n          {\"Apply through \" + props.job.source}\n        </Button>\n        <br />\n        <br />\n        <div style={styleDescriptionRender}>\n          {props.job.jobDescription}\n        </div>{\" \"}\n        <br />\n      </div>\n    );\n  }\n};\n\nexport default JobInformation;\n"]},"metadata":{},"sourceType":"module"}